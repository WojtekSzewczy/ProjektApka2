// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RoomLayoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView favIcon;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final MaterialCardView room;

  @NonNull
  public final TextView roomAddress;

  @NonNull
  public final TextView roomName;

  private RoomLayoutBinding(@NonNull MaterialCardView rootView, @NonNull ImageView favIcon,
      @NonNull ConstraintLayout mainLayout, @NonNull MaterialCardView room,
      @NonNull TextView roomAddress, @NonNull TextView roomName) {
    this.rootView = rootView;
    this.favIcon = favIcon;
    this.mainLayout = mainLayout;
    this.room = room;
    this.roomAddress = roomAddress;
    this.roomName = roomName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RoomLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RoomLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.room_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RoomLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fav_icon;
      ImageView favIcon = ViewBindings.findChildViewById(rootView, id);
      if (favIcon == null) {
        break missingId;
      }

      id = R.id.mainLayout;
      ConstraintLayout mainLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainLayout == null) {
        break missingId;
      }

      MaterialCardView room = (MaterialCardView) rootView;

      id = R.id.room_address;
      TextView roomAddress = ViewBindings.findChildViewById(rootView, id);
      if (roomAddress == null) {
        break missingId;
      }

      id = R.id.room_name;
      TextView roomName = ViewBindings.findChildViewById(rootView, id);
      if (roomName == null) {
        break missingId;
      }

      return new RoomLayoutBinding((MaterialCardView) rootView, favIcon, mainLayout, room,
          roomAddress, roomName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
